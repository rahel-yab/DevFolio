{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rahel/Desktop/devFolio/DevFolio/frontend/src/services/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080/api/v1';\n\n// Types based on backend entities\nexport interface User {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n  is_verified: boolean;\n  last_login_at?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Experience {\n  company: string;\n  role: string;\n  start_date: string;\n  end_date?: string;\n  description: string;\n  location: string;\n  is_current: boolean;\n}\n\nexport interface Education {\n  school: string;\n  degree: string;\n  field: string;\n  start_date: string;\n  end_date?: string;\n  gpa?: string;\n  description: string;\n}\n\nexport interface Project {\n  name: string;\n  description: string;\n  tech_stack: string[];\n  link: string;\n  github_link: string;\n  image_url: string;\n  start_date: string;\n  end_date?: string;\n  featured: boolean;\n}\n\nexport interface Portfolio {\n  id: string;\n  user_id: string;\n  name: string;\n  title: string;\n  bio: string;\n  email: string;\n  phone: string;\n  location: string;\n  website: string;\n  linkedin: string;\n  github: string;\n  experience: Experience[];\n  education: Education[];\n  projects: Project[];\n  skills: string[];\n  template: string;\n  is_public: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  first_name: string;\n  last_name: string;\n}\n\nexport interface LoginResponse {\n  user: User;\n  access_token: string;\n}\n\nexport interface CreatePortfolioRequest {\n  name: string;\n  title: string;\n  bio?: string;\n  email?: string;\n  phone?: string;\n  location?: string;\n  website?: string;\n  linkedin?: string;\n  github?: string;\n  experience?: Experience[];\n  education?: Education[];\n  projects?: Project[];\n  skills?: string[];\n  template?: string;\n}\n\nexport interface UpdatePortfolioRequest {\n  name?: string;\n  title?: string;\n  bio?: string;\n  email?: string;\n  phone?: string;\n  location?: string;\n  website?: string;\n  linkedin?: string;\n  github?: string;\n  experience?: Experience[];\n  education?: Education[];\n  projects?: Project[];\n  skills?: string[];\n  template?: string;\n  is_public?: boolean;\n}\n\nclass ApiService {\n  private getAuthHeaders(): HeadersInit {\n    const token = localStorage.getItem('access_token');\n    return {\n      'Content-Type': 'application/json',\n      ...(token && { Authorization: `Bearer ${token}` }),\n    };\n  }\n\n  private async handleResponse<T>(response: Response): Promise<T> {\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ error: 'Network error' }));\n      throw new Error(errorData.error || `HTTP ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data.data || data;\n  }\n\n  // Auth endpoints\n  async login(credentials: LoginRequest): Promise<LoginResponse> {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(credentials),\n      credentials: 'include',\n    });\n    \n    const result = await this.handleResponse<LoginResponse>(response);\n    \n    // Store access token\n    if (result.access_token) {\n      localStorage.setItem('access_token', result.access_token);\n    }\n    \n    return result;\n  }\n\n  async register(userData: RegisterRequest): Promise<LoginResponse> {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(userData),\n      credentials: 'include',\n    });\n    \n    const result = await this.handleResponse<LoginResponse>(response);\n    \n    // Store access token\n    if (result.access_token) {\n      localStorage.setItem('access_token', result.access_token);\n    }\n    \n    return result;\n  }\n\n  async logout(): Promise<void> {\n    try {\n      await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: 'POST',\n        headers: this.getAuthHeaders(),\n        credentials: 'include',\n      });\n    } finally {\n      localStorage.removeItem('access_token');\n    }\n  }\n\n  async getProfile(): Promise<User> {\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n      headers: this.getAuthHeaders(),\n      credentials: 'include',\n    });\n    \n    return this.handleResponse<User>(response);\n  }\n\n  async updateProfile(updates: Partial<User>): Promise<User> {\n    const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n      method: 'PUT',\n      headers: this.getAuthHeaders(),\n      body: JSON.stringify(updates),\n      credentials: 'include',\n    });\n    \n    return this.handleResponse<User>(response);\n  }\n\n  async refreshToken(): Promise<{ access_token: string }> {\n    const response = await fetch(`${API_BASE_URL}/auth/refresh`, {\n      method: 'POST',\n      credentials: 'include',\n    });\n    \n    const result = await this.handleResponse<{ access_token: string }>(response);\n    \n    if (result.access_token) {\n      localStorage.setItem('access_token', result.access_token);\n    }\n    \n    return result;\n  }\n\n  // Portfolio endpoints\n  async getUserPortfolios(): Promise<Portfolio[]> {\n    const response = await fetch(`${API_BASE_URL}/portfolios/user`, {\n      headers: this.getAuthHeaders(),\n      credentials: 'include',\n    });\n    \n    return this.handleResponse<Portfolio[]>(response);\n  }\n\n  async getPortfolio(id: string): Promise<Portfolio> {\n    const response = await fetch(`${API_BASE_URL}/portfolios/${id}`, {\n      headers: this.getAuthHeaders(),\n      credentials: 'include',\n    });\n    \n    return this.handleResponse<Portfolio>(response);\n  }\n\n  async createPortfolio(portfolioData: CreatePortfolioRequest): Promise<Portfolio> {\n    const response = await fetch(`${API_BASE_URL}/portfolios`, {\n      method: 'POST',\n      headers: this.getAuthHeaders(),\n      body: JSON.stringify(portfolioData),\n      credentials: 'include',\n    });\n    \n    return this.handleResponse<Portfolio>(response);\n  }\n\n  async updatePortfolio(id: string, updates: UpdatePortfolioRequest): Promise<Portfolio> {\n    const response = await fetch(`${API_BASE_URL}/portfolios/${id}`, {\n      method: 'PUT',\n      headers: this.getAuthHeaders(),\n      body: JSON.stringify(updates),\n      credentials: 'include',\n    });\n    \n    return this.handleResponse<Portfolio>(response);\n  }\n\n  async deletePortfolio(id: string): Promise<void> {\n    const response = await fetch(`${API_BASE_URL}/portfolios/${id}`, {\n      method: 'DELETE',\n      headers: this.getAuthHeaders(),\n      credentials: 'include',\n    });\n    \n    await this.handleResponse<void>(response);\n  }\n\n  async getPublicPortfolios(limit = 10, offset = 0): Promise<Portfolio[]> {\n    const response = await fetch(\n      `${API_BASE_URL}/portfolios/public?limit=${limit}&offset=${offset}`\n    );\n    \n    return this.handleResponse<Portfolio[]>(response);\n  }\n\n  async searchPortfolios(query: string, limit = 10, offset = 0): Promise<Portfolio[]> {\n    const response = await fetch(\n      `${API_BASE_URL}/portfolios/search?q=${encodeURIComponent(query)}&limit=${limit}&offset=${offset}`\n    );\n    \n    return this.handleResponse<Portfolio[]>(response);\n  }\n\n  async enhanceWithAI(portfolioId: string, fields: string[], context?: any): Promise<Portfolio> {\n    const response = await fetch(`${API_BASE_URL}/portfolios/enhance`, {\n      method: 'POST',\n      headers: this.getAuthHeaders(),\n      body: JSON.stringify({\n        portfolio_id: portfolioId,\n        fields,\n        context,\n      }),\n      credentials: 'include',\n    });\n    \n    return this.handleResponse<Portfolio>(response);\n  }\n\n  // Health check\n  async healthCheck(): Promise<{ status: string; message: string }> {\n    const response = await fetch(`${API_BASE_URL.replace('/api/v1', '')}/health`);\n    return this.handleResponse<{ status: string; message: string }>(response);\n  }\n}\n\nexport const apiService = new ApiService();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rahel/Desktop/devFolio/DevFolio/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, createContext, useContext, ReactNode } from 'react';\nimport { apiService, User, LoginRequest, RegisterRequest } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  login: (credentials: LoginRequest) => Promise<void>;\n  register: (userData: RegisterRequest) => Promise<void>;\n  logout: () => Promise<void>;\n  updateProfile: (updates: Partial<User>) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isAuthenticated = !!user;\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          const profile = await apiService.getProfile();\n          setUser(profile);\n        } catch (error) {\n          try {\n            await apiService.refreshToken();\n            const profile = await apiService.getProfile();\n            setUser(profile);\n          } catch (refreshError) {\n            localStorage.removeItem('access_token');\n          }\n        }\n      }\n      setIsLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (credentials: LoginRequest) => {\n    setIsLoading(true);\n    try {\n      const response = await apiService.login(credentials);\n      setUser(response.user);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (userData: RegisterRequest) => {\n    setIsLoading(true);\n    try {\n      const response = await apiService.register(userData);\n      setUser(response.user);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setIsLoading(true);\n    try {\n      await apiService.logout();\n    } finally {\n      setUser(null);\n      setIsLoading(false);\n    }\n  };\n\n  const updateProfile = async (updates: Partial<User>) => {\n    if (!user) return;\n    \n    setIsLoading(true);\n    try {\n      const updatedUser = await apiService.updateProfile(updates);\n      setUser(updatedUser);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    isLoading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAeA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAYN,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAqB;;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,kBAAkB,CAAC,CAAC;IAE1B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;yDAAiB;oBACrB,MAAM,QAAQ,aAAa,OAAO,CAAC;oBACnC,IAAI,OAAO;wBACT,IAAI;4BACF,MAAM,UAAU,MAAM,yHAAA,CAAA,aAAU,CAAC,UAAU;4BAC3C,QAAQ;wBACV,EAAE,OAAO,OAAO;4BACd,IAAI;gCACF,MAAM,yHAAA,CAAA,aAAU,CAAC,YAAY;gCAC7B,MAAM,UAAU,MAAM,yHAAA,CAAA,aAAU,CAAC,UAAU;gCAC3C,QAAQ;4BACV,EAAE,OAAO,cAAc;gCACrB,aAAa,UAAU,CAAC;4BAC1B;wBACF;oBACF;oBACA,aAAa;gBACf;;YAEA;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO;QACnB,aAAa;QACb,IAAI;YACF,MAAM,WAAW,MAAM,yHAAA,CAAA,aAAU,CAAC,KAAK,CAAC;YACxC,QAAQ,SAAS,IAAI;QACvB,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,WAAW,OAAO;QACtB,aAAa;QACb,IAAI;YACF,MAAM,WAAW,MAAM,yHAAA,CAAA,aAAU,CAAC,QAAQ,CAAC;YAC3C,QAAQ,SAAS,IAAI;QACvB,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,SAAS;QACb,aAAa;QACb,IAAI;YACF,MAAM,yHAAA,CAAA,aAAU,CAAC,MAAM;QACzB,SAAU;YACR,QAAQ;YACR,aAAa;QACf;IACF;IAEA,MAAM,gBAAgB,OAAO;QAC3B,IAAI,CAAC,MAAM;QAEX,aAAa;QACb,IAAI;YACF,MAAM,cAAc,MAAM,yHAAA,CAAA,aAAU,CAAC,aAAa,CAAC;YACnD,QAAQ;QACV,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;IAtFa;KAAA","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rahel/Desktop/devFolio/DevFolio/frontend/src/components/Header.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n\r\nexport default function Header() {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const { user, isAuthenticated, logout, isLoading } = useAuth();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n      setIsMenuOpen(false);\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className=\"w-full bg-white/95 backdrop-blur-sm shadow-lg border-b border-gray-100 sticky top-0 z-50\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          {/* Logo */}\r\n          <Link href=\"/\" className=\"flex items-center space-x-3 hover:opacity-80 transition-opacity\">\r\n            <div className=\"relative\">\r\n              <Image \r\n                src=\"/logo.png\" \r\n                alt=\"DevFolio Logo\" \r\n                width={40} \r\n                height={40} \r\n                className=\"rounded-lg\"\r\n              />\r\n              <div className=\"absolute -inset-1 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-lg blur opacity-20\"></div>\r\n            </div>\r\n            <span className=\"text-2xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent\">\r\n              DevFolio\r\n            </span>\r\n          </Link>\r\n\r\n          {/* Desktop Navigation */}\r\n          <nav className=\"hidden md:flex items-center space-x-8\">\r\n            <Link \r\n              href=\"/\" \r\n              className=\"text-gray-700 hover:text-indigo-600 font-medium transition-colors relative group\"\r\n            >\r\n              Home\r\n              <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-indigo-600 transition-all group-hover:w-full\"></span>\r\n            </Link>\r\n            <Link \r\n              href=\"/templates\" \r\n              className=\"text-gray-700 hover:text-indigo-600 font-medium transition-colors relative group\"\r\n            >\r\n              Templates\r\n              <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-indigo-600 transition-all group-hover:w-full\"></span>\r\n            </Link>\r\n            <Link \r\n              href=\"/dashboard\" \r\n              className=\"text-gray-700 hover:text-indigo-600 font-medium transition-colors relative group\"\r\n            >\r\n              Dashboard\r\n              <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-indigo-600 transition-all group-hover:w-full\"></span>\r\n            </Link>\r\n          </nav>\r\n\r\n          {/* Desktop CTA Buttons */}\r\n          <div className=\"hidden md:flex items-center space-x-4\">\r\n            {isAuthenticated ? (\r\n              <>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-8 h-8 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-white text-sm font-semibold\">\r\n                      {user?.first_name?.[0]}{user?.last_name?.[0]}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"text-gray-700 font-medium\">\r\n                    {user?.first_name} {user?.last_name}\r\n                  </span>\r\n                </div>\r\n                <button \r\n                  onClick={handleLogout}\r\n                  className=\"px-4 py-2 text-gray-700 hover:text-red-600 font-medium transition-colors\"\r\n                >\r\n                  Sign Out\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link href=\"/login\">\r\n                  <button className=\"px-4 py-2 text-gray-700 hover:text-indigo-600 font-medium transition-colors\">\r\n                    Sign In\r\n                  </button>\r\n                </Link>\r\n                <Link href=\"/templates\">\r\n                  <button className=\"px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200\">\r\n                    Get Started\r\n                  </button>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* Mobile Menu Button */}\r\n          <button\r\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n            className=\"md:hidden p-2 rounded-lg hover:bg-gray-100 transition-colors\"\r\n          >\r\n            <svg \r\n              className=\"w-6 h-6 text-gray-700\" \r\n              fill=\"none\" \r\n              stroke=\"currentColor\" \r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              {isMenuOpen ? (\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              ) : (\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n              )}\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Mobile Navigation */}\r\n        {isMenuOpen && (\r\n          <div className=\"md:hidden py-4 border-t border-gray-100\">\r\n            <nav className=\"flex flex-col space-y-4\">\r\n              <Link \r\n                href=\"/\" \r\n                className=\"text-gray-700 hover:text-indigo-600 font-medium transition-colors px-2 py-1\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Home\r\n              </Link>\r\n              <Link \r\n                href=\"/templates\" \r\n                className=\"text-gray-700 hover:text-indigo-600 font-medium transition-colors px-2 py-1\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Templates\r\n              </Link>\r\n              <Link \r\n                href=\"/dashboard\" \r\n                className=\"text-gray-700 hover:text-indigo-600 font-medium transition-colors px-2 py-1\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Dashboard\r\n              </Link>\r\n              <div className=\"flex flex-col space-y-3 pt-4 border-t border-gray-100\">\r\n                {isAuthenticated ? (\r\n                  <>\r\n                    <div className=\"flex items-center space-x-3 px-2 py-1\">\r\n                      <div className=\"w-8 h-8 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full flex items-center justify-center\">\r\n                        <span className=\"text-white text-sm font-semibold\">\r\n                          {user?.first_name?.[0]}{user?.last_name?.[0]}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"text-gray-700 font-medium\">\r\n                        {user?.first_name} {user?.last_name}\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      onClick={handleLogout}\r\n                      className=\"w-full px-4 py-2 text-gray-700 hover:text-red-600 font-medium transition-colors text-left\"\r\n                    >\r\n                      Sign Out\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Link href=\"/login\" onClick={() => setIsMenuOpen(false)}>\r\n                      <button className=\"w-full px-4 py-2 text-gray-700 hover:text-indigo-600 font-medium transition-colors text-left\">\r\n                        Sign In\r\n                      </button>\r\n                    </Link>\r\n                    <Link href=\"/templates\" onClick={() => setIsMenuOpen(false)}>\r\n                      <button className=\"w-full px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg font-semibold shadow-lg\">\r\n                        Get Started\r\n                      </button>\r\n                    </Link>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}